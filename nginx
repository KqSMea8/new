手工编译版
yum -y install pcre-devel openssl openssl-devel git gcc
git clone https://github.com/arut/nginx-rtmp-module.git
wget http://nginx.org/download/nginx-1.13.8.tar.gz
tar -zxvf nginx-1.13.8.tar.gz
cd nginx-1.13.8
./configure --prefix=/usr/local/nginx  --add-module=../nginx-rtmp-module  --with-http_ssl_module
make && make install

点播
vi /usr/local/nginx/conf/nginx.conf
rtmp {                 #RTMP服务
    server {
        listen 1935;   #//服务端口 
    chunk_size 4096;   #//数据传输块的大小

    application vod {
        play /opt/vide/vod; #//视频文件存放位置。
    }
    }
}

启动服务
cd /usr/local/nginx/sbin
./nginx

下载VLC播放器，打开网络串流
rtmp://49.4.2.7/vod/in4K_3_5G_h264.mp4

srs-bench测试流媒体
https://github.com/ossrs/srs-bench
git clone https://github.com/simple-rtmp-server/srs-bench.git
yum install gcc-c++ -y
cd srs-bench && ./configure && make
./objs/sb_rtmp_load -c 1 -r rtmp://127.0.0.1:1935/vod/in4K_3_5G_h264.mp4

失败，会提示
[2018-01-09 11:33:53.542][188][error] rtmp client dump url failed. ret=104 errno=104(Connection reset by peer)


直播
rtmp {    
    server {    
        listen 1935;    
    application hls {
        live on;     
        hls on;     
        hls_path /tmp/app;     
        hls_fragment 5s;     
    }  
    }    
} 

http 下面增加
location /hls {    
           #server hls fragments    
           types{    
             application/vnd.apple.mpegurl m3u8;    
             video/mp2t ts;    
           }    
        alias /tmp/app;    
        expires -1;    
        } 
        
视频文件转流（注意test后面关联使用）
ffmpeg -re -i sample.flv -vcodec copy -acodec copy -f flv rtmp://192.168.0.231/hls/test
ffmpeg -re -i sample.flv -r 30 -s 1280*720 -f flv rtmp://192.168.0.231/hls/test
ffmpeg -re -i 920801331E50069CC28342532C7C57A7.flv -vcodec copy -acodec copy -f flv rtmp://192.168.0.231/hls/test
注意：不要用自己转换的flv文件

在vlc中打开 测试地址：http://192.168.1.105/hls/test.m3u8
统计信息http://192.168.1.105/stat

参考：http://blog.csdn.net/tao_627/article/details/22271559
